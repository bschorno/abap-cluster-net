using ABAPNet.Cluster.Attributes;

namespace ABAPNet.Cluster.Test.Unit
{
    public class Write_StringTable
    {
        [Fact]
        public void Write_String_Table()
        {
            DataBuffer dataBuffer = new DataBuffer();

            byte[] bufferExpected = {
                0xFF, 0x06, 0x02, 0x01, 0x01, 0x02, 0x80, 0x00, 0x34, 0x31, 0x30, 0x33,
                0x00, 0x00, 0x00, 0x00, 0x06, 0x13, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
                0x00, 0x00, 0x61, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x54, 0x00, 0x41, 0x00, 0x42, 0x00, 0x4C, 0x00, 0x45, 0x00, 0xAD, 0x13,
                0x00, 0x00, 0x00, 0x00, 0x08, 0xAA, 0x13, 0x00, 0x00, 0x00, 0x00, 0x08,
                0xAE, 0x13, 0x00, 0x00, 0x00, 0x00, 0x08, 0xBE, 0x00, 0x00, 0x00, 0x08,
                0x00, 0x00, 0x00, 0x02, 0xCA, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x41,
                0x00, 0xCB, 0xCA, 0x00, 0x00, 0x00, 0x08, 0x42, 0x00, 0x42, 0x00, 0x42,
                0x00, 0x42, 0x00, 0xCB, 0xBF, 0x04
            };

            var bufferActual = dataBuffer.Export(new ClusterWithStringTable()
            {
                Table = new string[] {
                    "AA",
                    "BBBB"
                }
            });

            Assert.Equal(bufferExpected, bufferActual);
        }

        private struct ClusterWithStringTable
        {
            [ClusterFieldName("TABLE")]
            [StringTable]
            public string[] Table { get; set; }
        }
            
    }
}
